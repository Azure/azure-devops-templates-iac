parameters:
  - name: "environment"
    displayName: "(String) Name of the environment where the resource will be deployed."
    type: string
    default: "test"
  - name: "connectedServiceNameARM"
    displayName: "(String) Name of the DevOps Service Connection to use."
    type: string
  - name: "workingDirectoryPath"
    displayName: "(String) Path of the working directory. Should be the directory with Bicep code."
    type: string
    default: "$(System.DefaultWorkingDirectory)"
  - name: "deploymentScope"
    displayName: "(String) Name of the scope of the Bicep ARM deployment."
    type: string
    default: "resourcegroup"
    values:
      - "resourcegroup"
      - "subscription"
      - "managementgroup"
  - name: "deploymentMode"
    displayName: "(String) Type of deployment to apply on the target."
    type: string
    values:
      - "incremental"
      - "complete"
  - name: "templateFilePath"
    displayName: "(String) Path to main bicep template file to deploy."
    type: string
  - name: "templateParametersFilePath"
    displayName: "(String) Path to main bicep template parameter file to deploy."
    type: string
    default: ""
  - name: "targetResourceGroupName"
    displayName: "(String) Name of the resource group where the template will be deployed in. Used only in Resource Group Deployement Scope."
    type: string
    default: ""
  - name: "targetLocation"
    displayName: "(String) Name of the location where the resource group will be created if you use RG deployment function. If you use any other kind of deployment, it'll be the location hosting the metadata of the deployment. Use the full name of the region with spaces."
    type: string
    default: ""
  - name: "deploymentName"
    displayName: "(String) Name of the deployment that will appear on ARM."
    type: string
    default: ""
  - name: "deploymentOutputsVariableName"
    displayName: "(String) Name of the variable containing the ARM outputs of the deployment."
    type: string
    default: ""
  - name: "enableDestroyBicepResourceGroupDeployment"
    displayName: "(String) Text boolean enabling or not the deletion of what was just deployed in the RG deployment."
    type: string
    default: "false"
    values:
      - "false"
      - "true"

steps:
  - task: AzureCLI@2
    name: setSPNVariables_${{ parameters.environment }}
    displayName: "Set service principal connection information as variables"
    inputs:
      azureSubscription: ${{ parameters.connectedServiceNameARM  }}
      scriptLocation: inlineScript
      scriptType: pscore
      workingDirectory: ${{ parameters.workingDirectoryPath }}
      addSpnToEnvironment: true
      inlineScript: |
        $subscriptionId="$(az account list --query "[?isDefault].id" -o tsv)"
        Write-Host "##vso[task.setvariable variable=armSubscriptionId]$subscriptionId"

  - ${{ if eq(parameters.deploymentScope, 'resourcegroup') }}:
      - task: AzureResourceManagerTemplateDeployment@3
        name: bicepDeployRG_${{ parameters.environment }}
        displayName: "Deploy Bicep resources to Resource Group"
        inputs:
          deploymentScope: "Resource Group"
          azureResourceManagerConnection: "${{ parameters.connectedServiceNameARM }}"
          subscriptionId: "$(armSubscriptionId)"
          action: "Create Or Update Resource Group"
          resourceGroupName: "${{ parameters.targetResourceGroupName }}"
          location: "${{ parameters.targetLocation }}"
          templateLocation: "Linked artifact"
          csmFile: "${{ parameters.templateFilePath }}"
          csmParametersFile: "${{ parameters.templateParametersFilePath }}"
          deploymentMode: "${{ parameters.deploymentMode }}"
          deploymentName: "${{ parameters.deploymentName }}"
          deploymentOutputs: "${{ parameters.deploymentOutputsVariableName }}"

      - ${{ if eq(parameters.enableDestroyBicepResourceGroupDeployment, 'true') }}:
          - task: AzureResourceManagerTemplateDeployment@3
            name: bicepRemoveRG_${{ parameters.environment }}
            displayName: "Delete Resource Group"
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: "${{ parameters.connectedServiceNameARM }}"
              subscriptionId: "$(armSubscriptionId)"
              action: "DeleteRG"
              resourceGroupName: "${{ parameters.targetResourceGroupName }}"

  - ${{ if eq(parameters.deploymentScope, 'subscription') }}:
      - task: AzureResourceManagerTemplateDeployment@3
        name: bicepDeploySub_${{ parameters.environment }}
        displayName: "Deploy Bicep resources to Subscription"
        inputs:
          deploymentScope: "Subscription"
          azureResourceManagerConnection: "${{ parameters.connectedServiceNameARM }}"
          subscriptionId: "$(armSubscriptionId)"
          location: "${{ parameters.targetLocation }}"
          templateLocation: "Linked artifact"
          csmFile: "${{ parameters.templateFilePath }}"
          csmParametersFile: "${{ parameters.templateParametersFilePath }}"
          deploymentMode: "${{ parameters.deploymentMode }}"
          deploymentName: "${{ parameters.deploymentName }}"
          deploymentOutputs: "${{ parameters.deploymentOutputsVariableName }}"

  - ${{ if eq(parameters.deploymentScope, 'managementgroup') }}:
      - task: AzureResourceManagerTemplateDeployment@3
        name: bicepDeployMG_${{ parameters.environment }}
        displayName: "Deploy Bicep resources to Management Group"
        inputs:
          deploymentScope: "Management Group"
          azureResourceManagerConnection: "${{ parameters.connectedServiceNameARM }}"
          location: "${{ parameters.targetLocation }}"
          templateLocation: "Linked artifact"
          csmFile: "${{ parameters.templateFilePath }}"
          csmParametersFile: "${{ parameters.templateParametersFilePath }}"
          deploymentMode: "${{ parameters.deploymentMode }}"
          deploymentName: "${{ parameters.deploymentName }}"
          deploymentOutputs: "${{ parameters.deploymentOutputsVariableName }}"
