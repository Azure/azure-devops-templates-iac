parameters:
  - name: workingDirectoryPath
    displayName: "(String) Path of the root directory containing the code to scan."
    type: string
    default: $(System.DefaultWorkingDirectory)
  - name: dockerPreCommitImageName
    displayName: "(String) Name of the pre-commit docker image in the registry"
    type: string
    default: "docker-pre-commit"
  - name: dockerPreCommitImageTag
    displayName: "(String) Docker image tag to use during execution."
    type: string
    default: "main"
  - name: dockerPreCommitRegistry
    displayName: "(String) FQDN of the registry containing the pre-commit image."
    type: string
    default: "[containerregistry].azurecr.io"
  - name: enableGitInitialization
    displayName: "(String) Text boolean defining if git init should be ran or not."
    type: string
    default: "true"
  - name: enableDockerRegistryLoginLogout
    displayName: "(String) Enable or disable the login management to registry to download image."
    type: string
    default: "false"
  - name: dockerRegistryServiceConnection
    displayName: "Name of the connected service to use to connect to the Docker (ACR) registry of the same name."
    type: string
    default: ""

steps:
  - ${{ if eq(parameters.enableDockerRegistryLoginLogout, 'true') }}:
      - task: Docker@2
        displayName: Login to Docker container registry
        name: dockerRegistryLogin
        inputs:
          command: login
          containerRegistry: "${{ parameters.dockerRegistryServiceConnection }}"

  - task: Powershell@2
    name: runPreCommit
    displayName: "Scan and validate code with Pre-Commit"
    inputs:
      pwsh: true
      workingDirectory: ${{ parameters.workingDirectoryPath }}
      targetType: inline
      script: |
        if("${{ parameters.enableGitInitialization }}" -eq "true"){
          git init
          git add -A
          git checkout -b precommiteval
        }

        docker pull ${{ parameters.dockerPreCommitRegistry }}/${{ parameters.dockerPreCommitImageName }}:${{ parameters.dockerPreCommitImageTag }}
        docker run --rm -v ${{ parameters.workingDirectoryPath }}:/data -w /data ${{ parameters.dockerPreCommitRegistry }}/${{ parameters.dockerPreCommitImageName }}:${{ parameters.dockerPreCommitImageTag }} run -a

  - ${{ if eq(parameters.enableDockerRegistryLoginLogout, 'true') }}:
      - task: Docker@2
        displayName: Logout of target Docker container registry
        name: dockerRegistryLogout
        condition: succeededOrFailed()
        inputs:
          command: logout
          containerRegistry: "${{ parameters.dockerRegistryServiceConnection }}"
