parameters:
  - name: "connectedServiceNameARM"
    displayName: "(String) Name of the DevOps Service Connection to use."
    type: string
  - name: "workingDirectoryPath"
    displayName: "(String) Path of the working directory. Should be the directory with Bicep code."
    type: string
    default: "$(System.DefaultWorkingDirectory)"
  - name: "psRuleModules"
    displayName: "(String) A comma separated list of modules to use for analysis by PSRule."
    type: string
    default: "PSRule.Rules.Azure"
  - name: "configurationFilePath"
    displayName: "(String) Path from the workingDirectoryPath where you can find the configuration file."
    type: string
    default: "ps-rule.yaml"
  - name: "additionalRulesPath"
    displayName: "(String) Path to directory that contains additional custom rules.."
    type: string
    default: ""
  - name: "inputFiles"
    displayName: "(String) Name of the file/files to analyse. Accepts wildcards."
    type: string
    default: "*.bicep"
steps:
  #Require install https://marketplace.visualstudio.com/items?itemName=bewhite.ps-rule
  - task: AzurePowerShell@5
    name: PSRuleInstallDep
    displayName: "PSRule - Install dependencies on agent"
    inputs:
      azureSubscription: "${{ parameters.connectedServiceNameARM }}"
      ScriptType: "InlineScript"
      Inline: |
        Install-Module Az.Resources -Force -Scope CurrentUser
      azurePowerShellVersion: "LatestVersion"
      workingDirectory: "${{ parameters.workingDirectoryPath }}"
  - task: ps-rule-install@2
    name: PSRuleInstall
    displayName: "PSRule - Install rules"
    inputs:
      module: "${{ parameters.psRuleModules }}"
      latest: true
      prerelease: false
  - task: ps-rule-assert@2
    name: PSRuleAssertion
    displayName: "PSRule - Analyze Azure template files"
    inputs:
      path: "${{ parameters.workingDirectoryPath }}"
      option: "${{ parameters.workingDirectoryPath }}${{ parameters.configurationFilePath }}"
      modules: "${{ parameters.psRuleModules }}"
      source: "${{ parameters.additionalRulesPath }}"
      inputType: repository
      inputPath: "${{ parameters.workingDirectoryPath }}/${{ parameters.inputFiles }}"
