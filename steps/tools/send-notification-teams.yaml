parameters:
  - name: repositoryName
    displayName: "(String) Name of the repository linked to the created artifact"
    type: string
    default: ""
  - name: jobResultStatus
    displayName: "(String) Path of the root directory containing the code to scan."
    type: string
    default: ""
  - name: messageCardFactsJSONArray
    displayName: "(String) Raw JSON array containing the information, called facts in Teams MessageCard, to display in the message. "
    type: string
    default: ""
  - name: teamsWebhookURL
    displayName: "(String) URL of the webhook where the message will be sent to."
    type: string
    default: ""

steps:
  - task: PowerShell@2
    displayName: Send report to Teams channel
    name: teamsReport
    inputs:
    targetType: "inline"
    script: |
      $body=@'
      {
        "@type": "MessageCard",
        "@context": "https://schema.org/extensions",
        "summary": "ActivityPipeline",
        "themeColor": "D778D7",
        "title": "${{ parameters.repositoryName }} - ${{ parameters.jobResultStatus }} - Build activity",
        "sections": [
          {
            "facts": ${{ parameters.messageCardFactsJSONArray }},
            "text": "The build for the repository ${{ parameters.repositoryName }} has been completed with the status ${{ parameters.jobResultStatus }} "
          }
        ]
      }
      '@
      $result=Invoke-RestMethod -uri "${{ paramters.teamsWebhookURL }}" -Method Post -body $body -ContentType 'application/json'
      if($result -eq 1){
        exit 0
      }
      else {
        exit 1
      }
